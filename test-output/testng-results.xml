<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" total="7" passed="6">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="41249" started-at="2019-11-13T05:45:01Z" finished-at="2019-11-13T05:45:42Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="41249" started-at="2019-11-13T05:45:01Z" finished-at="2019-11-13T05:45:42Z">
      <class name="Misc.NSEIndia">
        <test-method status="PASS" signature="launch()[pri:0, instance:Misc.NSEIndia@4678c730]" name="launch" is-config="true" duration-ms="5034" started-at="2019-11-13T11:15:01Z" finished-at="2019-11-13T11:15:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launch -->
        <test-method status="PASS" signature="startClass()[pri:0, instance:Misc.NSEIndia@4678c730]" name="startClass" is-config="true" duration-ms="121" started-at="2019-11-13T11:15:06Z" finished-at="2019-11-13T11:15:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startClass -->
        <test-method status="PASS" signature="startMethod(java.lang.reflect.Method)[pri:0, instance:Misc.NSEIndia@4678c730]" name="startMethod" is-config="true" duration-ms="3" started-at="2019-11-13T11:15:06Z" finished-at="2019-11-13T11:15:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Misc.NSEIndia.abc()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startMethod -->
        <test-method status="PASS" signature="abc()[pri:0, instance:Misc.NSEIndia@4678c730]" name="abc" duration-ms="359" started-at="2019-11-13T11:15:06Z" finished-at="2019-11-13T11:15:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abc -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:Misc.NSEIndia@4678c730]" name="getResult" is-config="true" duration-ms="1" started-at="2019-11-13T11:15:07Z" finished-at="2019-11-13T11:15:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=abc status=SUCCESS method=NSEIndia.abc()[pri:0, instance:Misc.NSEIndia@4678c730] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="startMethod(java.lang.reflect.Method)[pri:0, instance:Misc.NSEIndia@4678c730]" name="startMethod" is-config="true" duration-ms="0" started-at="2019-11-13T11:15:07Z" finished-at="2019-11-13T11:15:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Misc.NSEIndia.aaa() throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startMethod -->
        <test-method status="FAIL" signature="aaa()[pri:0, instance:Misc.NSEIndia@4678c730]" name="aaa" duration-ms="9539" started-at="2019-11-13T11:15:07Z" finished-at="2019-11-13T11:15:16Z">
          <exception class="java.io.FileNotFoundException">
            <message>
              <![CDATA[C:\Users\dhanrajsingh.thakare\workspace\SeleniumChallenge\src\main\java\utilities\testData2.xlsx (The system cannot find the file specified)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.io.FileNotFoundException: C:\Users\dhanrajsingh.thakare\workspace\SeleniumChallenge\src\main\java\utilities\testData2.xlsx (The system cannot find the file specified)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(Unknown Source)
	at java.io.FileInputStream.<init>(Unknown Source)
	at java.io.FileInputStream.<init>(Unknown Source)
	at utilities.readExcel.addExcelSheet(readExcel.java:65)
	at Misc.NSEIndia.aaa(NSEIndia.java:41)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.io.FileNotFoundException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aaa -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:Misc.NSEIndia@4678c730]" name="getResult" is-config="true" duration-ms="332" started-at="2019-11-13T11:15:16Z" finished-at="2019-11-13T11:15:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=aaa status=FAILURE method=NSEIndia.aaa()[pri:0, instance:Misc.NSEIndia@4678c730] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:Misc.NSEIndia@4678c730]" name="getResult" is-config="true" duration-ms="0" started-at="2019-11-13T11:15:16Z" finished-at="2019-11-13T11:15:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=bbb status=SUCCESS method=NSEIndia.bbb()[pri:0, instance:Misc.NSEIndia@4678c730] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="startMethod(java.lang.reflect.Method)[pri:0, instance:Misc.NSEIndia@4678c730]" name="startMethod" is-config="true" duration-ms="0" started-at="2019-11-13T11:15:16Z" finished-at="2019-11-13T11:15:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Misc.NSEIndia.bbb()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startMethod -->
        <test-method status="PASS" signature="bbb()[pri:0, instance:Misc.NSEIndia@4678c730]" name="bbb" duration-ms="0" started-at="2019-11-13T11:15:16Z" finished-at="2019-11-13T11:15:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bbb -->
        <test-method status="PASS" signature="startMethod(java.lang.reflect.Method)[pri:0, instance:Misc.NSEIndia@4678c730]" name="startMethod" is-config="true" duration-ms="0" started-at="2019-11-13T11:15:17Z" finished-at="2019-11-13T11:15:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Misc.NSEIndia.dataMultiple(java.lang.String) throws java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startMethod -->
        <test-method status="PASS" signature="dataMultiple(java.lang.String)[pri:0, instance:Misc.NSEIndia@4678c730]" name="dataMultiple" duration-ms="6213" started-at="2019-11-13T11:15:17Z" data-provider="CompanyName" finished-at="2019-11-13T11:15:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Bajaj Finserv Limited]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dataMultiple -->
        <test-method status="PASS" signature="dataMultiple(java.lang.String)[pri:0, instance:Misc.NSEIndia@4678c730]" name="dataMultiple" duration-ms="6076" started-at="2019-11-13T11:15:23Z" data-provider="CompanyName" finished-at="2019-11-13T11:15:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Hindustan Unilever]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dataMultiple -->
        <test-method status="PASS" signature="startMethod(java.lang.reflect.Method)[pri:0, instance:Misc.NSEIndia@4678c730]" name="startMethod" is-config="true" duration-ms="0" started-at="2019-11-13T11:15:23Z" finished-at="2019-11-13T11:15:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Misc.NSEIndia.dataMultiple(java.lang.String) throws java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startMethod -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:Misc.NSEIndia@4678c730]" name="getResult" is-config="true" duration-ms="0" started-at="2019-11-13T11:15:23Z" finished-at="2019-11-13T11:15:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=dataMultiple status=SUCCESS method=NSEIndia.dataMultiple(java.lang.String)[pri:0, instance:Misc.NSEIndia@4678c730] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="dataMultiple(java.lang.String)[pri:0, instance:Misc.NSEIndia@4678c730]" name="dataMultiple" duration-ms="6183" started-at="2019-11-13T11:15:29Z" data-provider="CompanyName" finished-at="2019-11-13T11:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Mahindra & Mahindra Limited]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dataMultiple -->
        <test-method status="PASS" signature="startMethod(java.lang.reflect.Method)[pri:0, instance:Misc.NSEIndia@4678c730]" name="startMethod" is-config="true" duration-ms="0" started-at="2019-11-13T11:15:29Z" finished-at="2019-11-13T11:15:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Misc.NSEIndia.dataMultiple(java.lang.String) throws java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startMethod -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:Misc.NSEIndia@4678c730]" name="getResult" is-config="true" duration-ms="0" started-at="2019-11-13T11:15:29Z" finished-at="2019-11-13T11:15:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=dataMultiple status=SUCCESS method=NSEIndia.dataMultiple(java.lang.String)[pri:0, instance:Misc.NSEIndia@4678c730] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:Misc.NSEIndia@4678c730]" name="getResult" is-config="true" duration-ms="0" started-at="2019-11-13T11:15:35Z" finished-at="2019-11-13T11:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=dataMultiple status=SUCCESS method=NSEIndia.dataMultiple(java.lang.String)[pri:0, instance:Misc.NSEIndia@4678c730] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="startMethod(java.lang.reflect.Method)[pri:0, instance:Misc.NSEIndia@4678c730]" name="startMethod" is-config="true" duration-ms="0" started-at="2019-11-13T11:15:35Z" finished-at="2019-11-13T11:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Misc.NSEIndia.dataMultiple(java.lang.String) throws java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startMethod -->
        <test-method status="PASS" signature="dataMultiple(java.lang.String)[pri:0, instance:Misc.NSEIndia@4678c730]" name="dataMultiple" duration-ms="6013" started-at="2019-11-13T11:15:35Z" data-provider="CompanyName" finished-at="2019-11-13T11:15:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[GAIL]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dataMultiple -->
        <test-method status="PASS" signature="endTest()[pri:0, instance:Misc.NSEIndia@4678c730]" name="endTest" is-config="true" duration-ms="200" started-at="2019-11-13T11:15:41Z" finished-at="2019-11-13T11:15:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTest -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:Misc.NSEIndia@4678c730]" name="getResult" is-config="true" duration-ms="0" started-at="2019-11-13T11:15:41Z" finished-at="2019-11-13T11:15:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=dataMultiple status=SUCCESS method=NSEIndia.dataMultiple(java.lang.String)[pri:0, instance:Misc.NSEIndia@4678c730] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="closeBrowser()[pri:0, instance:Misc.NSEIndia@4678c730]" name="closeBrowser" is-config="true" duration-ms="710" started-at="2019-11-13T11:15:42Z" finished-at="2019-11-13T11:15:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- Misc.NSEIndia -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
